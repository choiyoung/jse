package oop01.encapsule;
/*
 프로그래밍의 발전 단계
 1. 순차적 :  GOTO, Line 번호, Fortran
 2. 구조적 : 함수(Function), main(), 포인터, 고속처리,Embeded(끼워진 프로그램)
 3. 객체지향 : 클래스(Class), Reference, c++,c#,Java
 */
/*
 객체지향의 개념
 1. 재사용성 : 컴퍼넌트 (모듈) 지향 설계
 2. 분리가능성 : S/W 모듈이 각각 분리될 수 있음 
*/

/*
  개발순서
 1. 설계 : 객체 모델링
 		클래스의 "속성"과 "기능"을 문서상으로 나열 정리
 		메소드 Stub(원형,구조) 생성
 2. 정의 : 클래스 형태로 맴변 정의, 메소드 기능 정의
 3. 구현 : 정의된 클래스를 이용해서
 		메모리상에 객체를 만들고, 객체를 이용한 프로그래밍 작업
 */
/*
 클래스 구조
 	클래스란 ? 사용자 정의 데이터 타입
 	객체란 ? 속성과 기능
 클래스 발전단계
 	Primitive Data Type
 	-> 구조체(기본데이터 타입의 집합체)
 	-> 클래스
 */
public class OopTheory {

}
